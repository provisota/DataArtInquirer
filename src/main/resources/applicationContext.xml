<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/data/jpa
                        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="customAuthListener"
          class="com.dataart.inquirer.server.auth.CustomAuthListener"/>

    <!-- import the dataSource definition -->
    <import resource="datasource-config.xml"/>

    <context:component-scan base-package="com.dataart.inquirer.server.services"/>

    <context:property-placeholder location="classpath:config.properties"
                                  system-properties-mode="OVERRIDE"/>

    <security:http auto-config="true" use-expressions="true">
        <!-- TODO ВАЖНО!!! Для тестирования приложения в GWT DevMode или GWT SuperDevMode
        закоментировать все строки с тегом 'intercept-url' -->

        <!--<security:intercept-url pattern="/resources/css/bootstrap.min.css"
                                access="permitAll"/>
        <security:intercept-url pattern="/login.jsp*"
                                access="isAnonymous()"/>
        <security:intercept-url pattern="/registration.jsp*"
                                access="isAnonymous()"/>
        <security:intercept-url pattern="/register*"
                                access="isAnonymous()"/>
        <security:intercept-url pattern="/dataartinquirer/**"
                                access="isAuthenticated()"/>
        <security:intercept-url pattern="/dataartinquirer**"
                                access="isAuthenticated()"/>
        <security:intercept-url pattern="/DataArtInquirer.html*"
                                access="isAuthenticated()"/>
        <security:intercept-url pattern="/**"
                                access="isAuthenticated()"/>-->

        <security:form-login login-processing-url="/static/j_spring_security_check"
                             login-page="/login.jsp"
                             authentication-failure-url="/login.jsp?message=invalid login
                             or password"/>
        <security:logout logout-success-url="/login.jsp"/>
    </security:http>

    <security:global-method-security secured-annotations="enabled"/>
    <!--<security:global-method-security pre-post-annotations="enabled" />-->

    <bean id="customAuthenticationProvider"
          class="com.dataart.inquirer.server.auth.CustomAuthenticationProvider"/>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="customAuthenticationProvider"/>
    </security:authentication-manager>

    <!-- EntityManagerFactory config -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.dataart.inquirer.shared.entity"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="${jpa.database}"/>
                <property name="databasePlatform" value="${hibernate.dialect}"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            </props>
        </property>
    </bean>

    <!-- JpaTransactionManager -->
    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven/>

    <!--
       Post-processor to perform exception translation on @Repository classes (from native
       exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
    -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!--Repositories config-->
    <jpa:repositories base-package="com.dataart.inquirer.server.dao"
                      entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"/>
</beans>